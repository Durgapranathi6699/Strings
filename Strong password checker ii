class Solution {
    public boolean strongPasswordCheckerII(String password) {
        boolean hasLower=false;
        boolean hasUpper=false;
        boolean hasDigit=false;
        boolean hasSpecialChar=false;
        Set<Character> set=new HashSet<>(Arrays.asList('!','@','#','$','%','^','&','*','(',')','-','+'));
        for(char i:password.toCharArray()){
            if(Character.isLowerCase(i)){
                 hasLower=true;
            }
            if(Character.isUpperCase(i)){
                 hasUpper=true;
            }
            if(Character.isDigit(i)){
                hasDigit=true;
            }
            if(set.contains(i)){
                hasSpecialChar=true;
            }
        }
        if( hasLower &&  hasUpper &&  hasDigit &&  hasSpecialChar && hasLetterSide(password) && (password.length()>=8) ){
            return true;
        }return false;
    }
   boolean hasLetterSide(String s){
       char a[]=s.toCharArray();
       for(int i=1;i<a.length;i++){
           if(a[i]==a[i-1]){
               return false;
           }
       }
       return true;
   }
   }
