class Solution {
    public int[][] substringXorQueries(String s, int[][] queries) {
       
        int m = queries.length;
        int[][] ret = new int[m][];
          int n = s.length();
        Map<Integer, int[]> map = new HashMap<>();
        //to avoid leading zero
       map.put(0, new int[]{s.indexOf("0"),s.indexOf("0")});
       

        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == '0') continue;
            for (int j = i ; j <n; j++) {
                String sub = s.substring(i,j+1);
                if (sub.length() > Integer.toBinaryString(Integer.MAX_VALUE).length()) break;
                // if (map.contains)
                map.putIfAbsent(Integer.parseInt(sub, 2), new int[]{i, j});
            }
        }


        for (int i = 0; i < m; i++) {
            int x = queries[i][0] ^ queries[i][1];

            if (map.containsKey(x)) {
                ret[i] = map.get(x);
            } else {
                ret[i] = new int[]{-1, -1};;
            }
        }
        return ret;
    }
}
